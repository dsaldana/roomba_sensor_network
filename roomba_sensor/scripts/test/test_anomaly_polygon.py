import unittest

from roomba_sensor.geometric import polygon


a = [(-5.034897804260254, 3.42655611038208), (-4.948686122894287, 3.3745410442352295), (-4.866369247436523, 3.322169065475464), (-4.818227291107178, 3.2963309288024902), (-4.796563625335693, 3.2804274559020996), (-4.779200077056885, 3.260345935821533), (-4.763049125671387, 3.234408378601074), (-4.751648426055908, 3.208327293395996), (-4.743292331695557, 3.1869473457336426), (-4.734007835388184, 3.163090944290161), (-4.72611141204834, 3.1381640434265137), (-4.720859050750732, 3.1123032569885254), (-4.717880725860596, 3.083770513534546), (-4.717055797576904, 3.0579681396484375), (-4.717550754547119, 3.031038761138916), (-4.719310760498047, 3.0052640438079834), (-4.722677707672119, 2.9796342849731445), (-4.727677345275879, 2.9543657302856445), (-4.734142303466797, 2.928319215774536), (-4.7407097816467285, 2.9048728942871094), (-4.747844696044922, 2.8816473484039307), (-4.755104064941406, 2.859731912612915), (-4.7635698318481445, 2.83573842048645), (-4.772287845611572, 2.811941623687744), (-4.781342506408691, 2.7871077060699463), (-4.790359973907471, 2.7622640132904053), (-4.798953533172607, 2.737470865249634), (-4.807321548461914, 2.7113544940948486), (-4.813413619995117, 2.6907684803009033), (-4.819713592529297, 2.6678786277770996), (-4.825300216674805, 2.643667697906494), (-4.830172538757324, 2.6181325912475586), (-4.83336877822876, 2.594897747039795), (-4.835018634796143, 2.573791742324829), (-4.835873126983643, 2.5513439178466797), (-4.835820198059082, 2.526543378829956), (-4.834553241729736, 2.5019423961639404), (-4.831552505493164, 2.477628231048584), (-4.826660633087158, 2.4523069858551025), (-4.820398330688477, 2.427114725112915), (-4.813228130340576, 2.4034056663513184), (-4.804653644561768, 2.3804385662078857), (-4.7816033363342285, 2.3346242904663086), (-4.7677812576293945, 2.314785957336426), (-4.738308429718018, 2.2789840698242188), (-4.722672939300537, 2.261092185974121), (-4.705707550048828, 2.2432727813720703), (-4.668673992156982, 2.213711738586426), (-4.649752616882324, 2.201688528060913), (-4.627260208129883, 2.1886093616485596), (-4.605254650115967, 2.177088499069214), (-4.5839433670043945, 2.1677308082580566), (-4.559701442718506, 2.1592695713043213), (-4.5368876457214355, 2.1529059410095215), (-4.511358261108398, 2.146110773086548), (-4.483534812927246, 2.139047861099243), (-4.457839012145996, 2.132923126220703), (-4.434418678283691, 2.127340316772461), (-4.409934043884277, 2.1216375827789307), (-4.38298225402832, 2.1157658100128174), (-4.3570942878723145, 2.110231876373291), (-4.332334518432617, 2.104874849319458), (-4.307614803314209, 2.0993170738220215), (-4.284160614013672, 2.094022274017334), (-4.25834846496582, 2.0883021354675293), (-4.233676433563232, 2.0828771591186523), (-4.209063529968262, 2.0775063037872314), (-4.183487415313721, 2.0723628997802734), (-4.158721923828125, 2.068650722503662), (-4.135910511016846, 2.0650203227996826), (-4.107476234436035, 2.059854745864868), (-4.084100723266602, 2.0561270713806152), (-4.06167459487915, 2.053497076034546), (-4.0366740226745605, 2.050987720489502), (-4.009271144866943, 2.048644542694092), (-3.9842634201049805, 2.0469398498535156), (-3.9582371711730957, 2.0459365844726562), (-3.9345786571502686, 2.046036958694458), (-3.908543825149536, 2.0471129417419434), (-3.8826236724853516, 2.049287796020508), (-3.857922077178955, 2.0524485111236572), (-3.8329951763153076, 2.056241035461426), (-3.8065102100372314, 2.0598337650299072), (-3.78133225440979, 2.062774419784546), (-3.7574710845947266, 2.0656096935272217), (-3.7299387454986572, 2.068901538848877), (-3.7058730125427246, 2.071542263031006), (-3.681877851486206, 2.073967456817627), (-3.6567978858947754, 2.0766470432281494), (-3.630354881286621, 2.079390048980713), (-3.603912591934204, 2.081796169281006), (-3.5787456035614014, 2.084012985229492), (-3.5526177883148193, 2.0866122245788574), (-3.523932456970215, 2.0898590087890625), (-3.496476173400879, 2.092933177947998), (-3.471540689468384, 2.0959720611572266), (-3.4478931427001953, 2.099297046661377), (-3.4195995330810547, 2.103792667388916), (-3.393838405609131, 2.108548164367676), (-3.3682637214660645, 2.1140284538269043), (-3.3416600227355957, 2.1205389499664307), (-3.298381805419922, 2.1331186294555664), (-3.270514965057373, 2.1429338455200195), (-3.2454869747161865, 2.153352737426758), (-3.2230372428894043, 2.163970470428467), (-3.1776981353759766, 2.1891672611236572), (-3.1552767753601074, 2.2042746543884277), (-3.1352784633636475, 2.2199819087982178), (-3.1181721687316895, 2.2362966537475586), (-3.09951114654541, 2.254619598388672), (-3.08258056640625, 2.2728331089019775), (-3.065471649169922, 2.2925186157226562), (-3.0500662326812744, 2.31185245513916), (-3.0360538959503174, 2.331968307495117), (-3.02243709564209, 2.355095148086548), (-3.011930227279663, 2.376321315765381), (-3.000828981399536, 2.401094675064087), (-2.9918837547302246, 2.4240164756774902), (-2.984064817428589, 2.4497480392456055), (-2.9782564640045166, 2.4738712310791016), (-2.9728572368621826, 2.4997076988220215), (-2.9676432609558105, 2.5243303775787354), (-2.9626617431640625, 2.550178050994873), (-2.957078695297241, 2.581976890563965), (-2.9527182579040527, 2.60819673538208), (-2.947847843170166, 2.634427785873413), (-2.943464756011963, 2.6569061279296875), (-2.9386022090911865, 2.6817359924316406), (-2.9333674907684326, 2.707742691040039), (-2.9285147190093994, 2.7313497066497803), (-2.9234161376953125, 2.756084680557251), (-2.9185893535614014, 2.77963924407959), (-2.9135921001434326, 2.805260419845581), (-2.910454034805298, 2.8287172317504883), (-2.9061965942382812, 2.8590049743652344), (-2.9011662006378174, 2.8851571083068848), (-2.896097421646118, 2.9122707843780518), (-2.892101764678955, 2.9357523918151855), (-2.888596534729004, 2.960468053817749), (-2.885803461074829, 2.98514986038208), (-2.8842933177948, 3.011183023452759), (-2.882887601852417, 3.0387802124023438), (-2.8819949626922607, 3.063755512237549), (-2.8820250034332275, 3.088562250137329), (-2.883274555206299, 3.1133406162261963), (-2.88547945022583, 3.138132333755493), (-2.888747453689575, 3.1639959812164307), (-2.89278507232666, 3.1885385513305664), (-2.8975534439086914, 3.2116527557373047), (-2.9034032821655273, 3.2344579696655273), (-2.9112184047698975, 3.2589938640594482), (-2.920560359954834, 3.283203363418579), (-2.9311985969543457, 3.3067092895507812), (-2.9426214694976807, 3.3286919593811035), (-2.9544694423675537, 3.3490517139434814), (-2.967301845550537, 3.3687615394592285), (-2.9811577796936035, 3.3877005577087402), (-2.99765944480896, 3.4075334072113037), (-3.014575719833374, 3.425539493560791), (-3.0324037075042725, 3.4426937103271484), (-3.051009178161621, 3.4587209224700928), (-3.070812940597534, 3.473241090774536), (-3.091512441635132, 3.486785888671875), (-3.112905740737915, 3.499238967895508), (-3.1347944736480713, 3.5106794834136963), (-3.1572299003601074, 3.5205934047698975), (-3.1770553588867188, 3.5278518199920654), (-3.2051708698272705, 3.536409378051758), (-3.229206085205078, 3.5421321392059326), (-3.253511905670166, 3.546600818634033), (-3.2780747413635254, 3.5496826171875), (-3.3041749000549316, 3.552131414413452), (-3.3304712772369385, 3.5540952682495117), (-3.3558645248413086, 3.5561628341674805), (-3.3811206817626953, 3.5587546825408936), (-3.4062273502349854, 3.5613479614257812), (-3.4313673973083496, 3.5638537406921387), (-3.4553771018981934, 3.566315174102783), (-3.4805707931518555, 3.5691170692443848), (-3.506903648376465, 3.5721945762634277), (-3.5344080924987793, 3.575476884841919), (-3.558298349380493, 3.5783562660217285), (-3.5833656787872314, 3.581305980682373), (-3.608459711074829, 3.5842056274414062), (-3.6359169483184814, 3.5873465538024902), (-3.662168502807617, 3.5901787281036377), (-3.686004400253296, 3.5925962924957275), (-3.712123394012451, 3.594717502593994), (-3.735966682434082, 3.5961058139801025), (-3.7645883560180664, 3.597262144088745), (-3.7871804237365723, 3.5976545810699463)]

class TestAnomalyPolygon(unittest.TestCase):
    def setUp(self):
        self.robot_id = "robot1"

    def test_simplify(self):

        new_line = polygon.simplify_polyline(a, 0.01)
        print len(new_line), len(a)



    def test_fusion(self):
        line1 = [(5, 5), (5, 4), (5, 3), (5, 2)]
        line2 = [(3, 3), (5, 3), (6, 3)]

        # fused_line = polygon.lines_fusion(line1, line2)
        # self.assertEqual(fused_line, [(3, 3), (5, 3), (5, 2)])
        #
        # line1 = [(5, 5), (5, 4), (5, 3), (5, 2), (5, 0)]
        # line2 = [(10, 3), (3, 4), (6, 3)]
        #
        # fused_line = polygon.lines_fusion(line1, line2)
        # self.assertEqual(fused_line, [(10, 3), (3, 4), (5, 3), (5, 2), (5, 0)])

if __name__ == '__main__':
    unittest.main()